CREATE OR REPLACE FUNCTION sv3_rpt.workday_optimized(
    start_date DATE,
    num_days INTEGER
) 
RETURNS DATE
LANGUAGE plpgsql
AS $BODY$
DECLARE
    current_date DATE := start_date;
    days_added INTEGER := 0;
    business_days DATE[];
    max_valid_date DATE := '9999-12-31';  -- Maximum allowable date to avoid overflow
BEGIN
    -- Fetch all business days for the potential date range in one query
    SELECT ARRAY_AGG(date_value::date)
    INTO business_days
    FROM sv3.ses_date_dimension
    WHERE date_value BETWEEN start_date AND LEAST(start_date + (num_days * 2)::integer, max_valid_date)
    AND is_business = B'1'::bit(1);

    -- Main loop to count business days
    WHILE days_added < num_days LOOP
        -- Check if the current date is within the list of business days
        IF current_date = ANY(business_days) THEN
            days_added := days_added + 1;
        END IF;

        -- Increment the current date, but ensure it stays within the valid date range
        IF days_added < num_days THEN
            IF current_date + 1 > max_valid_date THEN
                RAISE EXCEPTION 'Date out of range: cannot exceed %', max_valid_date;
            END IF;
            current_date := current_date + 1;
        END IF;
    END LOOP;

    RETURN current_date;
END;
$BODY$;
