import zipfile
import os
import psycopg2

def extract_zip_and_get_shapefile(zip_path, extract_to_folder):
    # Extract the ZIP file
    with zipfile.ZipFile(zip_path, 'r') as zip_ref:
        zip_ref.extractall(extract_to_folder)

    # Search for the SHAPE file
    for root, dirs, files in os.walk(extract_to_folder):
        for file in files:
            if file.endswith(".shp"):
                return os.path.join(root, file)
    
    # If no SHAPE file is found
    return None

def save_paths_to_db(zip_path, extract_folder, shape_file_path, db_params):
    # Connect to the PostgreSQL database
    conn = psycopg2.connect(**db_params)
    cursor = conn.cursor()

    # Create table if it doesn't exist
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS file_paths (
            id SERIAL PRIMARY KEY,
            zip_path TEXT,
            extract_folder TEXT,
            shape_file_path TEXT
        );
    ''')

    # Insert the paths into the table
    cursor.execute('''
        INSERT INTO file_paths (zip_path, extract_folder, shape_file_path)
        VALUES (%s, %s, %s)
    ''', (zip_path, extract_folder, shape_file_path))

    conn.commit()
    cursor.close()
    conn.close()

# Database connection parameters
db_params = {
    'dbname': 'your_dbname',
    'user': 'your_username',
    'password': 'your_password',
    'host': 'your_host'
}

# Example usage
zip_file_path = 'path_to_your_zip_file.zip'  # Replace with your ZIP file path
extract_folder = 'path_to_extract_folder'    # Replace with your desired extract folder path
shape_file_path = extract_zip_and_get_shapefile(zip_file_path, extract_folder)

if shape_file_path:
    print(f"SHAPE file found at: {shape_file_path}")
    save_paths_to_db(zip_file_path, extract_folder, shape_file_path, db_params)
    print("Paths saved to database.")
else:
    print("No SHAPE file found in the ZIP archive.")
