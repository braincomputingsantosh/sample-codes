CREATE OR REPLACE PROCEDURE update_est_calendared(event_id_list TEXT)
LANGUAGE plpgsql
AS $$
DECLARE
    _event_id VARCHAR;
BEGIN
    -- Create a temporary table to hold formatted event_ids
    CREATE TEMP TABLE IF NOT EXISTS temp_event_ids (event_id VARCHAR PRIMARY KEY) ON COMMIT DROP;
    
    -- Empty the temporary table in case it already exists
    TRUNCATE temp_event_ids;
    
    -- Populate the temporary table with formatted event_ids from the input list
    INSERT INTO temp_event_ids (event_id)
    SELECT 'EID-' || LPAD(unnest(string_to_array(event_id_list, ',')), 8, '0');
    
    -- Assuming a separate operation to determine and raise notice for each event_id
    FOR _event_id IN SELECT event_id FROM temp_event_ids LOOP
        IF EXISTS (SELECT 1 FROM public.exams WHERE Event_ID = _event_id AND (Calendared IS NULL OR Calendared = '')) THEN
            RAISE NOTICE 'Event_ID % is being set to Yes', _event_id;
        ELSE
            RAISE NOTICE 'Event_ID % is being set to No or remains unchanged', _event_id;
        END IF;
    END LOOP;

    -- Then, perform your update logic as required, without the raise notice inside the case
    -- (Your existing update logic here)
END;
$$;
