import os
from pyspark.dbutils import DBUtils

def check_file_in_volume(volume_name, file_path):
    # Create a DBUtils object
    dbutils = DBUtils()
    
    # Construct the full path to the file in the volume
    full_path = f"/dbfs/mnt/{volume_name}/{file_path}"
    
    # Check if the file exists
    if os.path.exists(full_path):
        print(f"The file '{file_path}' exists in the volume '{volume_name}'.")
    else:
        print(f"The file '{file_path}' does not exist in the volume '{volume_name}'.")

# Example usage
volume_name = "your_volume_name"
file_path = "path/to/your/file.txt"

check_file_in_volume(volume_name, file_path)


import boto3
from botocore.exceptions import ClientError

def check_file_in_s3(bucket_name, file_key):
    # Create an S3 client
    s3 = boto3.client('s3')
    
    try:
        # Try to get the object's metadata
        s3.head_object(Bucket=bucket_name, Key=file_key)
        print(f"The file '{file_key}' exists in the S3 bucket '{bucket_name}'.")
    except ClientError as e:
        if e.response['Error']['Code'] == '404':
            print(f"The file '{file_key}' does not exist in the S3 bucket '{bucket_name}'.")
        else:
            print(f"An error occurred while checking for the file: {e}")

# Example usage
bucket_name = 'your-bucket-name'
file_key = 'path/to/your/file.txt'

check_file_in_s3(bucket_name, file_key)


import boto3
from botocore.exceptions import ClientError, ParamValidationError

def check_file_in_s3(bucket_name, file_key):
    # Create an S3 client
    s3 = boto3.client('s3')
    
    try:
        # Try to get the object's metadata
        s3.head_object(Bucket=bucket_name, Key=file_key)
        print(f"The file '{file_key}' exists in the S3 bucket '{bucket_name}'.")
    except ClientError as e:
        if e.response['Error']['Code'] == '404':
            print(f"The file '{file_key}' does not exist in the S3 bucket '{bucket_name}'.")
        else:
            print(f"An error occurred while checking for the file: {e}")
    except ParamValidationError as e:
        print(f"Parameter validation error: {e}")
        print("Please check that your bucket_name and file_key are correctly formatted.")

# Example usage
bucket_name = 'your-bucket-name'
file_key = 'path/to/your/file.txt'

check_file_in_s3(bucket_name, file_key)
