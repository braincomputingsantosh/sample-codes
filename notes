Requirements Document: HELOC Data Processing and Metadata Management System

1. System Overview
   The system is designed to process Home Equity Line of Credit (HELOC) data, 
   moving it from raw to silver tables and managing associated metadata. It 
   operates on specific time periods and updates source metadata after processing.

2. Functional Requirements

   2.1 Data Selection
       - The system shall query for specific time periods (as_of_month) to 
         identify datasets for processing.
       - It shall generate a list of datasets that need to be imported from 
         raw to silver tables based on the as_of_month query.

   2.2 Data Processing
       - The system shall read data from the identified raw tables.
       - It shall check for existing data in the silver table for the given 
         as_of_month.
       - If data doesn't exist in the silver table, the system shall append 
         new data.
       - If data exists, the system shall update the existing records.

   2.3 Metadata Management
       - After data processing, the system shall update the SOURCE_METADATA_NEW 
         table with details of the update.
       - Metadata updates in SOURCE_METADATA_NEW shall include:
         * Status of the update (e.g., "PROCESSED", "FAILED")
         * File name
         * File path
         * Process date
         * File type
         * File insert date
         * Rows inserted count
         * Error messages (if any)
         * Reprocess flag
       - The system shall ensure that all metadata fields are accurately 
         updated to reflect the current state of each processed file.
       - The reprocess flag in SOURCE_METADATA_NEW shall be set based on 
         the outcome of the processing attempt.

   2.4 Error Handling
       - The system shall catch and log any errors occurring during the 
         data processing.
       - In case of errors, it shall update the SOURCE_METADATA_NEW table 
         with error information, including a truncated error message, and 
         set the status to "FAILED".

   2.5 Data Comparison and Selection
       - The system shall compare as_of_month values between the raw and silver tables.
       - It shall use an EXCEPT clause to identify as_of_month values present in the 
         raw table but not in the silver table.
       - Source of as_of_month:
         * Raw table: bk_mpo_raw.{raw_table_name}
         * Silver table: test_bk_mpo.{silver_table_name}
       - The EXCEPT clause is used to efficiently identify new or updated data that 
         needs to be processed, ensuring only necessary data is transferred from 
         raw to silver tables.

   2.6 Processing Workflow
       - The system shall generate a list of as_of_month values to process based on 
         the EXCEPT clause results.
       - For each identified as_of_month, the system shall execute the 
         append_and_update_metadata function to process the data.

3. Technical Requirements

   3.1 Platform
       - The system shall use PySpark for data processing and manipulation.

   3.2 Data Structures
       - Raw tables: Store the initial, unprocessed HELOC data.
       - Silver tables: Store the processed and cleaned HELOC data.
       - SOURCE_METADATA_NEW table: Store comprehensive metadata about the 
         processing of each file, including status, file details, and 
         processing outcomes.

   3.3 Functions
       - update_source_metadata(): Update SOURCE_METADATA_NEW table with 
         processing results, including status, file details, and reprocess flag.
       - extract_file_info(): Extract relevant information from file paths 
         for updating SOURCE_METADATA_NEW.
       - append_and_update_metadata(): Main function for data processing and 
         ensuring accurate metadata updates in SOURCE_METADATA_NEW.
       - process_table(): Orchestrate the processing of tables for specific 
         time periods and manage updates to SOURCE_METADATA_NEW.

   3.4 SQL Operations
       - The system shall use SparkSQL to perform EXCEPT operations between 
         raw and silver tables.
       - Example query structure:
         ```
         SELECT as_of_month FROM bk_mpo_raw.{raw_table_name}
         EXCEPT
         SELECT as_of_month FROM test_bk_mpo.{silver_table_name}
         ```
       - This operation identifies as_of_month values that exist in the raw table 
         but not in the silver table, indicating new or updated data.

4. Performance Requirements
   - The system shall be capable of handling large-scale data processing in 
     a distributed computing environment.

5. Security Requirements
   - Implement appropriate access controls for raw, silver, and SOURCE_METADATA_NEW tables.
   - Ensure secure handling of potentially sensitive HELOC data and metadata.

6. Maintainability and Scalability
   - The code shall be well-documented with function-level comments.
   - The system should be designed to accommodate potential increases in 
     data volume and processing frequency.

7. Reporting
   - The system shall log the results of each processing run in the SOURCE_METADATA_NEW 
     table, including the status, number of rows inserted, and any errors encountered.
   - Provide functionality to query SOURCE_METADATA_NEW for monitoring and 
     auditing purposes.

8. Compliance
   - Ensure all data handling complies with relevant financial regulations 
     and data protection laws.
