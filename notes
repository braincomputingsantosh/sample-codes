Here are a few ways to identify locks, particularly those affecting tables:

1. Using the pg_locks View
The pg_locks view contains all the locks currently held by active processes in the PostgreSQL instance. You can join this view with other catalog tables like pg_class and pg_stat_activity to get more readable and comprehensive information about the locks:

sql
Copy code
SELECT
    a.datname as database_name,
    c.relname as table_name,
    l.transactionid,
    l.mode,
    l.granted,
    a.query as current_query,
    a.pid,
    age(now(), a.query_start) as query_age,
    a.usename as username
FROM pg_locks l
JOIN pg_stat_activity a ON l.pid = a.pid
LEFT JOIN pg_class c ON c.oid = l.relation
WHERE c.relkind = 'r' -- 'r' means ordinary table
This query provides details about which tables are locked, the type of locks held (mode), whether the lock is active (granted), and what query is holding the lock, along with the age of the query and the user holding the lock.

2. Checking for Locks with Specific Modes
You might be specifically interested in stronger lock types that generally affect concurrency more significantly, like ExclusiveLocks or AccessExclusiveLocks. Here's how you could filter for those:

sql
Copy code
SELECT
    a.datname as database_name,
    c.relname as table_name,
    l.mode,
    a.query as blocking_query,
    a.pid as blocking_process_id,
    age(now(), a.query_start) as query_age,
    a.usename as blocking_user
FROM pg_locks l
JOIN pg_stat_activity a ON l.pid = a.pid
LEFT JOIN pg_class c ON c.oid = l.relation
WHERE l.mode = 'AccessExclusiveLock' AND l.granted
3. Identifying Blocked Queries
Sometimes, the interest is not only in who holds the lock but also in who is waiting for it. Hereâ€™s how you can find out which queries are blocked:

sql
Copy code
SELECT
    a.pid as waiting_pid,
    a.usename as waiting_user,
    a.query as waiting_query,
    age(now(), a.query_start) as waiting_duration,
    b.pid as blocking_pid,
    b.query as blocking_query,
    b.query_start as blocking_start_time,
    l.mode as lock_mode
FROM pg_locks l
JOIN pg_stat_activity a ON l.pid = a.pid
LEFT JOIN pg_locks bl ON bl.transactionid = l.transactionid AND bl.pid != l.pid
LEFT JOIN pg_stat_activity b ON bl.pid = b.pid
WHERE l.granted = false
AND a.query NOT LIKE '%pg_locks%'
This query shows the waiting queries along with the PIDs and queries of the blocking transactions. It helps in understanding what specific transactions are causing others to wait.
