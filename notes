import geopandas as gpd
import sqlite3

# Read shapefile using GeoPandas
shapefile = 'path_to_your_shapefile.shp'
gdf = gpd.read_file(shapefile)

# Check if 'geometry' column exists and is of geometry type
if 'geometry' in gdf.columns and gdf['geometry'].dtype == 'geometry':
    gdf['geometry'] = gdf['geometry'].apply(lambda x: x.wkt if x else None)
else:
    raise ValueError("No geometry column found or column does not contain valid geometries.")

# Get column names
columns = gdf.columns.tolist()

# SQLite setup
db_name = 'mydatabase.db'
table_name = 'my_shapefile_data'
conn = sqlite3.connect(db_name)
cursor = conn.cursor()

# Create SQL for table creation
columns_sql = ', '.join([f"{col} TEXT" for col in columns])
create_table_sql = f"CREATE TABLE IF NOT EXISTS {table_name} (id INTEGER PRIMARY KEY, {columns_sql})"
cursor.execute(create_table_sql)
conn.commit()

# Insert data into the table
for _, row in gdf.iterrows():
    # Prepare values and SQL query
    values = tuple(row[col] for col in columns)
    placeholders = ', '.join(['?'] * len(columns))
    insert_sql = f"INSERT INTO {table_name} ({', '.join(columns)}) VALUES ({placeholders})"
    cursor.execute(insert_sql, values)

conn.commit()
conn.close()
