import sqlite3
import csv
import os

def create_table_if_not_exists(cursor):
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS vasf1 (
        file_id INTEGER,
        year INTEGER,
        sftype TEXT,
        state TEXT,
        col1 INTEGER,
        segment INTEGER,
        logrecno INTEGER,
        tbl TEXT,
        stat DECIMAL
    )
    ''')

def process_file(cursor, file_path):
    with open(file_path, 'r') as file:
        csv_reader = csv.reader(file)

        insert_query = '''
        INSERT INTO vasf1 (file_id, year, sftype, state, col1, segment, logrecno, tbl, stat)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
        '''

        for row in csv_reader:
            if len(row) < 6:
                print(f"Skipping row with insufficient data: {row}")
                continue

            sftype = row[0]
            state = row[1]
            col1 = int(row[3])
            segment = int(row[4])
            logrecno = int(row[5])
            
            file_id = 701701
            year = 2010
            tbl = None
            stat = None

            cursor.execute(insert_query, (file_id, year, sftype, state, col1, segment, logrecno, tbl, stat))

def main():
    conn = sqlite3.connect('VAsf1.db')
    cursor = conn.cursor()

    create_table_if_not_exists(cursor)

    folder_path = 'path/to/your/sf1/files'  # Replace with your actual folder path

    for filename in os.listdir(folder_path):
        if filename.endswith('.sf1'):
            file_path = os.path.join(folder_path, filename)
            print(f"Processing file: {filename}")
            try:
                process_file(cursor, file_path)
            except Exception as e:
                print(f"Error processing file {filename}: {str(e)}")

    conn.commit()
    conn.close()

    print("Data ingestion complete for all files.")

if __name__ == "__main__":
    main()
