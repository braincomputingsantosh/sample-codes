CREATE OR REPLACE FUNCTION update_est_calendared(event_id_list TEXT)
RETURNS INTEGER
LANGUAGE plpgsql
AS $$
DECLARE
    affected_rows INTEGER;
BEGIN
    -- Create a temporary table to hold formatted event_ids
    CREATE TEMP TABLE IF NOT EXISTS temp_event_ids (event_id VARCHAR PRIMARY KEY) ON COMMIT DROP;
    
    -- Empty the temporary table in case it already exists
    TRUNCATE temp_event_ids;
    
    -- Populate the temporary table with unique formatted event_ids from the input list
    INSERT INTO temp_event_ids (event_id)
    SELECT DISTINCT 'EID-' || LPAD(unnest(string_to_array(event_id_list, ',')), 8, '0');
    
    -- Update logic on public.exams using a JOIN with the temporary table
    WITH upd AS (
        UPDATE public.exams e
        SET est_calendared = CASE
            WHEN e.Calendared IS NULL OR e.Calendared = '' THEN
                CASE
                    WHEN te.event_id IS NOT NULL THEN 'Yes'
                    ELSE 'No'
                END
            ELSE e.Calendared
        END
        FROM temp_event_ids te
        WHERE e.Event_ID = te.event_id
        RETURNING e.*
    )
    SELECT COUNT(*) INTO affected_rows FROM upd;
    
    -- Return the number of affected rows
    RETURN affected_rows;
END;
$$;
